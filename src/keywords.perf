/* -*- c -*- */
%{
#include "catalogue.h"
#include <string.h>

/* why cant these idiots declare it? */
inline const struct ud_tagtbl_s __attribute__((always_inline, gnu_inline))*
__ud_tag_from_s (register const char *str, register unsigned int len);
%}

%readonly-tables
%enum
%7bit
%struct-type
%define lookup-function-name __ud_tag_from_s
%define word-array-name keywords
%global-table

struct ud_tagtbl_s;

%%
::::::, UD_TAG_UNK
:class, UD_TAG_CLASS
:attr, UD_TAG_ATTR
:price, UD_TAG_PRICE
:ccy, UD_TAG_CURRENCY
:name, UD_TAG_GROUP0_NAME
:cfi, UD_TAG_GROUP0_CFI
:opol, UD_TAG_GROUP0_OPOL
:gaid, UD_TAG_GROUP0_GAID
:isin, UD_TAG_GROUP1_ISIN
:ric, UD_TAG_GROUP1_RIC
:bbg, UD_TAG_GROUP1_BBG
:fund-instr, UD_TAG_GROUP2_FUND_INSTR
:setd-instr, UD_TAG_GROUP2_SETD_INSTR
:birth, UD_TAG_GROUP3_ISSUE
:expiry, UD_TAG_GROUP3_EXPIRY
:settle, UD_TAG_GROUP3_SETTLE
:underlyer, UD_TAG_GROUP4_UNDERLYER
:strike, UD_TAG_GROUP4_STRIKE
:ratio, UD_TAG_GROUP4_RATIO
:kiko, UD_TAG_GROUP5_BARRIER
:barrier, UD_TAG_GROUP5_BARRIER
%%

ud_tag_t
ud_tag_from_s(const char *buf, size_t len)
{
	const struct ud_tagtbl_s *t = __ud_tag_from_s(buf, (unsigned int)len);
	if (t != NULL) {
		return t->tag;
	}
	return UD_TAG_UNK;
}

/* keywords.perf ends here */
